{"version":3,"file":"static/js/650.d332ab11.chunk.js","mappings":"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","sources":["components/LoginButton.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface User {\n  name: string;\n  email: string;\n  picture: string;\n}\n\ninterface LoginButtonProps {\n  onLogin?: (user: User) => void;\n  onLogout?: () => void;\n}\n\ndeclare global {\n  interface Window {\n    google: any;\n  }\n}\n\nconst LoginButton: React.FC<LoginButtonProps> = ({ onLogin, onLogout }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isGoogleLoaded, setIsGoogleLoaded] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const googleButtonRef = useRef<HTMLDivElement>(null);\n\n  const handleCredentialResponse = (response: any) => {\n    try {\n      const payload = JSON.parse(atob(response.credential.split('.')[1]));\n\n      const userData: User = {\n        name: payload.name,\n        email: payload.email,\n        picture: payload.picture,\n      };\n\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      onLogin?.(userData);\n    } catch (error) {\n      console.error('Error parsing Google response:', error);\n    }\n  };\n\n  const initializeGoogle = () => {\n    try {\n      if (!window.google || !googleButtonRef.current || user) return;\n\n      // Clear any existing button content\n      googleButtonRef.current.innerHTML = '';\n      \n      window.google.accounts.id.initialize({\n        client_id: '339241384511-4srj07ljhqvv75ah1roi185hiqnhomo4.apps.googleusercontent.com',\n        callback: handleCredentialResponse,\n      });\n\n      // Use consistent medium size for better mobile experience\n      window.google.accounts.id.renderButton(googleButtonRef.current, {\n        theme: 'filled_black',\n        size: 'medium',\n        type: 'standard',\n        shape: 'rectangular',\n        text: 'signin_with',\n      });\n\n      console.log('Google Identity Services initialized successfully');\n    } catch (err) {\n      console.error('Error initializing Google Identity Services:', err);\n      setError('Failed to initialize Google login');\n    }\n  };\n\n  // Load saved user on component mount\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  // Load Google script only once\n  useEffect(() => {\n    if (isGoogleLoaded || user) return;\n\n    const loadGoogleScript = () => {\n      if (window.google) {\n        setIsGoogleLoaded(true);\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        setIsGoogleLoaded(true);\n      };\n      script.onerror = () => {\n        console.error('Failed to load Google Identity Services script');\n        setError('Failed to load Google services');\n      };\n      document.head.appendChild(script);\n    };\n\n    loadGoogleScript();\n  }, [isGoogleLoaded, user]);\n\n  // Initialize Google button only when Google is loaded and user is not logged in\n  useEffect(() => {\n    if (isGoogleLoaded && !user) {\n      // Small delay to ensure DOM is ready\n      const timer = setTimeout(() => {\n        initializeGoogle();\n      }, 100);\n      \n      return () => {\n        clearTimeout(timer);\n        // Clear the button container to prevent duplicates\n        if (googleButtonRef.current) {\n          googleButtonRef.current.innerHTML = '';\n        }\n      };\n    }\n  }, [isGoogleLoaded, user]);\n\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    onLogout?.();\n    setShowUserMenu(false);\n  };\n\n  const toggleUserMenu = () => {\n    setShowUserMenu(!showUserMenu);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setShowUserMenu(false);\n      }\n    };\n\n    if (showUserMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showUserMenu]);\n\n  return (\n    <div className=\"relative\">\n      {user ? (\n        <>\n          <div\n            onClick={toggleUserMenu}\n            className=\"flex items-center space-x-1 bg-gray-800 hover:bg-gray-700 rounded-md sm:rounded-lg px-1.5 py-1 sm:px-2 sm:py-1.5 md:px-3 md:py-2 transition-colors cursor-pointer\"\n          >\n            <img\n              src={user.picture}\n              alt={user.name}\n              className=\"w-5 h-5 sm:w-6 sm:h-6 md:w-8 md:h-8 rounded-full flex-shrink-0\"\n            />\n            <span className=\"text-white font-medium max-w-12 xs:max-w-16 sm:max-w-20 md:max-w-32 truncate text-xs sm:text-sm hidden xs:inline\">\n              {user.name}\n            </span>\n            <svg className=\"w-3 h-3 sm:w-4 sm:h-4 text-white flex-shrink-0 hidden xs:inline\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n\n          {showUserMenu && (\n            <div\n              ref={menuRef}\n              className=\"absolute right-0 top-full mt-2 bg-white rounded-lg shadow-lg border border-gray-200 min-w-48 sm:min-w-64 z-50\"\n            >\n              <div className=\"p-3 sm:p-4\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3 mb-3 sm:mb-4\">\n                  <img\n                    src={user.picture}\n                    alt={user.name}\n                    className=\"w-10 h-10 sm:w-12 sm:h-12 rounded-full flex-shrink-0\"\n                  />\n                  <div className=\"min-w-0 flex-1\">\n                    <div className=\"font-medium text-gray-900 text-sm sm:text-base truncate\">{user.name}</div>\n                    <div className=\"text-xs sm:text-sm text-gray-500 truncate\">{user.email}</div>\n                  </div>\n                </div>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-lg transition-colors text-sm sm:text-base\"\n                >\n                  Logout\n                </button>\n              </div>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"flex-shrink-0 scale-75 xs:scale-90 sm:scale-100 origin-center\">\n          <div ref={googleButtonRef} className=\"inline-block google-btn-container\"></div>\n        </div>\n      )}\n      {error && (\n        <div className=\"text-red-600 mt-2 text-xs sm:text-sm\">{error}</div>\n      )}\n\n      {/* ✅ Plain React style tag for bold text */}\n      <style>\n        {`\n          .google-btn-container span {\n            font-weight: 600 !important;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default LoginButton;\n"],"names":["_ref","onLogin","onLogout","user","setUser","useState","showUserMenu","setShowUserMenu","error","setError","isGoogleLoaded","setIsGoogleLoaded","menuRef","useRef","googleButtonRef","handleCredentialResponse","response","payload","JSON","parse","atob","credential","split","userData","name","email","picture","localStorage","setItem","stringify","console","useEffect","savedUser","getItem","removeItem","loadGoogleScript","window","google","script","document","createElement","src","async","defer","onload","onerror","head","appendChild","timer","setTimeout","initializeGoogle","current","innerHTML","accounts","id","initialize","client_id","callback","renderButton","theme","size","type","shape","text","log","err","clearTimeout","handleClickOutside","event","contains","target","addEventListener","removeEventListener","_jsxs","className","children","_Fragment","onClick","toggleUserMenu","_jsx","alt","fill","viewBox","fillRule","d","clipRule","ref","handleLogout"],"sourceRoot":""}