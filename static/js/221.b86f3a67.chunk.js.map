{"version":3,"file":"static/js/221.b86f3a67.chunk.js","mappings":"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","sources":["components/Sidebar.tsx"],"sourcesContent":["import React, { memo, useCallback, useState, useEffect, useRef } from 'react';\n\ninterface SidebarProps {\n  data: any;\n  categoryOrder: string[];\n  selectedCategory: string | null;\n  selectedTopic: string | null;\n  setSelectedCategory: React.Dispatch<React.SetStateAction<string | null>>;\n  setSelectedTopic: React.Dispatch<React.SetStateAction<string | null>>;\n  setSelectedSubtopic: React.Dispatch<React.SetStateAction<string | null>>;\n}\n\nconst Sidebar: React.FC<SidebarProps> = memo(({\n  data,\n  categoryOrder,\n  selectedCategory,\n  selectedTopic,\n  setSelectedCategory,\n  setSelectedTopic,\n  setSelectedSubtopic\n}) => {\n  const [expandedTopics, setExpandedTopics] = useState<Record<string, boolean>>({});\n  const [selectedSubtopic, setLocalSelectedSubtopic] = useState<string | null>(null);\n  const sidebarRef = useRef<HTMLDivElement>(null);\n\n  // Prevent overscroll by handling wheel events on the scrollable content area\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  \n  useEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return;\n\n    const handleWheel = (e: WheelEvent) => {\n      const { scrollTop, scrollHeight, clientHeight } = scrollableElement;\n      const isScrollingUp = e.deltaY < 0;\n      const isScrollingDown = e.deltaY > 0;\n\n      // Prevent overscroll at top\n      if (isScrollingUp && scrollTop === 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      }\n\n      // Prevent overscroll at bottom\n      if (isScrollingDown && scrollTop + clientHeight >= scrollHeight) {\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      }\n    };\n\n    scrollableElement.addEventListener('wheel', handleWheel, { passive: false });\n    return () => {\n      scrollableElement.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n\n  // Ensure topic is expanded when selected\n  useEffect(() => {\n    if (selectedTopic) {\n      setExpandedTopics(prev => ({\n        ...prev,\n        [selectedTopic]: true\n      }));\n    }\n  }, [selectedTopic]);\n\n  const handleCategoryClick = useCallback((category: string) => {\n    // Special handling for Revision Sheet and DSA Patterns (they have direct problems)\n    if (category === \"DSA Countdown: Final 15 Days\") {\n      setSelectedCategory(category);\n      setSelectedTopic(\"Must Do DSA Problems\");\n      setSelectedSubtopic(null);\n      return;\n    }\n    \n    if (category === \"ALL DSA Patterns You must know\") {\n      setSelectedCategory(category);\n      setSelectedTopic(\"Must Know DSA Patterns\");\n      setSelectedSubtopic(null);\n      return;\n    }\n\n    setSelectedCategory(prevCategory => {\n      // If clicking the same category, toggle it off\n      if (prevCategory === category) {\n        setSelectedTopic(null);\n        setSelectedSubtopic(null);\n        return null;\n      }\n      // Otherwise, select the new category\n      setSelectedTopic(null);\n      setSelectedSubtopic(null);\n      return category;\n    });\n  }, [setSelectedCategory, setSelectedTopic, setSelectedSubtopic]);\n\n  const handleTopicClick = useCallback((topic: string) => {\n    setSelectedTopic(prevTopic => {\n      // If clicking the same topic, toggle it off\n      if (prevTopic === topic) {\n        setSelectedSubtopic(null);\n        return null;\n      }\n      // Otherwise, select the new topic\n      setSelectedSubtopic(null);\n      return topic;\n    });\n\n    // Always expand the topic when clicked\n    setExpandedTopics(prev => ({\n      ...prev,\n      [topic]: true\n    }));\n  }, [setSelectedTopic, setSelectedSubtopic]);\n\n  const handleSubtopicClick = useCallback((subtopic: string) => {\n    // Always set the subtopic, never toggle it off when clicking the same one\n    setSelectedSubtopic(subtopic);\n    setLocalSelectedSubtopic(subtopic);\n  }, [setSelectedSubtopic]);\n\n  // Function to safely get subtopics for a category and topic\n  const getSubtopics = (category: string | null, topic: string): string[] => {\n    if (!category || !topic) return [];\n    \n    const categoryData = data[category];\n    if (!categoryData) return [];\n    \n    // Type assertion to access properties with string index\n    const topicData = (categoryData as any)[topic];\n    if (!topicData) return [];\n    \n    return Object.keys(topicData);\n  };\n\n  // Color scheme for different categories - Dark backgrounds with colored text\n  const getCategoryColors = (category: string) => {\n    const colorMap: Record<string, { bg: string, hover: string, selected: string, text: string }> = {\n      \"DSA\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-purple-400\"\n      },\n      \"HLD\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-blue-400\"\n      },\n      \"LLD\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-green-400\"\n      },\n      \"Machine Coding\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-orange-400\"\n      },\n      \"MultiThreading\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-red-400\"\n      },\n      \"DSA Countdown: Final 15 Days\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-yellow-400\"\n      },\n      \"ALL DSA Patterns You must know\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-emerald-400\"\n      }\n    };\n    return colorMap[category] || {\n      bg: \"bg-gray-800\",\n      hover: \"hover:bg-gray-700\",\n      selected: \"bg-gray-700\",\n      text: \"text-gray-400\"\n    };\n  };\n\n  const getTopicColors = (category: string) => {\n    const colorMap: Record<string, { bg: string, hover: string, selected: string, text: string }> = {\n      \"DSA\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-purple-300\"\n      },\n      \"HLD\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-blue-300\"\n      },\n      \"LLD\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-green-300\"\n      },\n      \"Machine Coding\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-orange-300\"\n      },\n      \"MultiThreading\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-red-300\"\n      },\n      \"DSA Countdown: Final 15 Days\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-yellow-300\"\n      },\n      \"ALL DSA Patterns You must know\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-emerald-300\"\n      }\n    };\n    return colorMap[category] || {\n      bg: \"bg-gray-800\",\n      hover: \"hover:bg-gray-700\",\n      selected: \"bg-gray-700\",\n      text: \"text-gray-300\"\n    };\n  };\n\n  const getSubtopicColors = (category: string) => {\n    const colorMap: Record<string, { bg: string, hover: string, selected: string, text: string }> = {\n      \"DSA\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-purple-200\"\n      },\n      \"HLD\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-blue-200\"\n      },\n      \"LLD\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-green-200\"\n      },\n      \"Machine Coding\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-orange-200\"\n      },\n      \"MultiThreading\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-red-200\"\n      },\n      \"DSA Countdown: Final 15 Days\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-yellow-200\"\n      },\n      \"ALL DSA Patterns You must know\": {\n        bg: \"bg-gray-800\",\n        hover: \"hover:bg-gray-700\",\n        selected: \"bg-gray-700\",\n        text: \"text-emerald-200\"\n      }\n    };\n    return colorMap[category] || {\n      bg: \"bg-gray-800\",\n      hover: \"hover:bg-gray-700\",\n      selected: \"bg-gray-700\",\n      text: \"text-gray-200\"\n    };\n  };\n\n  return (\n    <div ref={sidebarRef} className=\"w-1/4 bg-gray-900 p-4 flex flex-col sidebar-container sidebar-locked\" style={{ height: 'calc(100vh - 140px)', overscrollBehavior: 'none', position: 'relative' }} role=\"navigation\">\n      {/* Main categories section - scrollable */}\n      <div ref={scrollableRef} className=\"flex-1 overflow-y-auto pr-2\" style={{ minHeight: 0 }}>\n        <ul className=\"space-y-2\">\n          {categoryOrder.map((category) => {\n            const categoryColors = getCategoryColors(category);\n            return (\n              <li key={category} className=\"mb-4\">\n                <button\n                  className={`w-full text-left p-3 rounded-lg transition-all duration-200 ${\n                    selectedCategory === category \n                      ? `${categoryColors.selected} shadow-lg border border-gray-600` \n                      : `${categoryColors.bg} ${categoryColors.hover} shadow-md`\n                  } ${categoryColors.text}`}\n                  onClick={() => handleCategoryClick(category)}\n                  aria-expanded={selectedCategory === category}\n                  aria-controls={`${category}-topics`}\n                >\n                  <span className=\"font-bold text-lg\">\n                    {category === \"DSA Countdown: Final 15 Days\" && \"🚀 \"}\n                    {category === \"ALL DSA Patterns You must know\" && \"📚 \"}\n                    {category}\n                  </span>\n                  <span className=\"float-right text-lg\">{selectedCategory === category ? '▼' : '▶'}</span>\n                </button>\n                \n                {selectedCategory === category && (\n                  <ul id={`${category}-topics`} className=\"ml-4 mt-3 space-y-2\">\n                    {Object.keys((data[category] as any)).map((topic) => {\n                      const topicColors = getTopicColors(category);\n                      // For revision sheet categories, don't show expandable topics since they contain individual problems\n                      const isRevisionCategory = category === \"DSA Countdown: Final 15 Days\" || category === \"ALL DSA Patterns You must know\";\n                      \n                      return (\n                        <li key={topic}>\n                          <button\n                            className={`w-full text-left p-2 rounded-md transition-all duration-150 ${\n                              selectedTopic === topic \n                                ? `${topicColors.selected} shadow-md` \n                                : `${topicColors.bg} ${topicColors.hover}`\n                            } ${topicColors.text}`}\n                            onClick={() => handleTopicClick(topic)}\n                            aria-expanded={selectedTopic === topic && expandedTopics[topic]}\n                            aria-controls={`${topic}-subtopics`}\n                          >\n                            <span className=\"font-medium\">{topic}</span>\n                            {!isRevisionCategory && (\n                              <span className=\"float-right\">{selectedTopic === topic && expandedTopics[topic] ? '▼' : '▶'}</span>\n                            )}\n                          </button>\n                          \n                          {!isRevisionCategory && selectedTopic === topic && expandedTopics[topic] && (\n                            <ul id={`${topic}-subtopics`} className=\"ml-4 mt-2 space-y-1\">\n                              {getSubtopics(selectedCategory, topic).map((subtopic) => {\n                                const subtopicColors = getSubtopicColors(category);\n                                return (\n                                  <li key={subtopic}>\n                                    <button\n                                      className={`w-full text-left p-2 rounded-md transition-all duration-150 ${\n                                        selectedSubtopic === subtopic \n                                          ? `${subtopicColors.selected} shadow-sm` \n                                          : `${subtopicColors.bg} ${subtopicColors.hover}`\n                                      } ${subtopicColors.text}`}\n                                      onClick={() => handleSubtopicClick(subtopic)}\n                                    >\n                                      <em className=\"text-sm\">{subtopic}</em>\n                                    </button>\n                                  </li>\n                                );\n                              })}\n                            </ul>\n                          )}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n});\n\nSidebar.displayName = 'Sidebar';\n\nexport default Sidebar;\n"],"names":["Sidebar","memo","_ref","data","categoryOrder","selectedCategory","selectedTopic","setSelectedCategory","setSelectedTopic","setSelectedSubtopic","expandedTopics","setExpandedTopics","useState","selectedSubtopic","setLocalSelectedSubtopic","sidebarRef","useRef","scrollableRef","useEffect","scrollableElement","current","handleWheel","e","scrollTop","scrollHeight","clientHeight","isScrollingUp","deltaY","isScrollingDown","preventDefault","stopPropagation","addEventListener","passive","removeEventListener","prev","_objectSpread","handleCategoryClick","useCallback","category","prevCategory","handleTopicClick","topic","prevTopic","handleSubtopicClick","subtopic","getSubtopics","categoryData","topicData","Object","keys","_jsx","ref","className","style","height","overscrollBehavior","position","role","children","minHeight","map","categoryColors","bg","hover","selected","text","getCategoryColors","_jsxs","concat","onClick","id","topicColors","getTopicColors","isRevisionCategory","subtopicColors","getSubtopicColors","displayName"],"sourceRoot":""}