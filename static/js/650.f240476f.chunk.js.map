{"version":3,"file":"static/js/650.f240476f.chunk.js","mappings":"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","sources":["components/LoginButton.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface User {\n  name: string;\n  email: string;\n  picture: string;\n}\n\ninterface LoginButtonProps {\n  onLogin?: (user: User) => void;\n  onLogout?: () => void;\n}\n\ndeclare global {\n  interface Window {\n    google: any;\n  }\n}\n\nconst LoginButton: React.FC<LoginButtonProps> = ({ onLogin, onLogout }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const googleButtonRef = useRef<HTMLDivElement>(null);\n\n  const initializeGoogle = () => {\n    try {\n      if (!window.google) return;\n\n      window.google.accounts.id.initialize({\n        client_id: '339241384511-4srj07ljhqvv75ah1roi185hiqnhomo4.apps.googleusercontent.com',\n        callback: handleCredentialResponse,\n      });\n\n      if (googleButtonRef.current) {\n        googleButtonRef.current.innerHTML = ''; // clear any previous button\n        window.google.accounts.id.renderButton(googleButtonRef.current, {\n          theme: 'filled_blue', // ✅ Google blue background\n          size: 'large',\n          type: 'standard',\n          shape: 'rectangular',\n          text: 'signin_with',\n        });\n      }\n\n      console.log('Google Identity Services initialized successfully');\n    } catch (err) {\n      console.error('Error initializing Google Identity Services:', err);\n      setError('Failed to initialize Google login');\n    }\n  };\n\n  useEffect(() => {\n    const loadGoogleScript = () => {\n      if (window.google) {\n        initializeGoogle();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.defer = true;\n      script.onload = initializeGoogle;\n      script.onerror = () => {\n        console.error('Failed to load Google Identity Services script');\n        setError('Failed to load Google services');\n      };\n      document.head.appendChild(script);\n    };\n\n    loadGoogleScript();\n  }, []);\n\n  useEffect(() => {\n    if (!user) {\n      initializeGoogle();\n    }\n  }, [user]);\n\n  const handleCredentialResponse = (response: any) => {\n    try {\n      const payload = JSON.parse(atob(response.credential.split('.')[1]));\n\n      const userData: User = {\n        name: payload.name,\n        email: payload.email,\n        picture: payload.picture,\n      };\n\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      onLogin?.(userData);\n    } catch (error) {\n      console.error('Error parsing Google response:', error);\n    }\n  };\n\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    onLogout?.();\n    setShowUserMenu(false);\n  };\n\n  const toggleUserMenu = () => {\n    setShowUserMenu(!showUserMenu);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setShowUserMenu(false);\n      }\n    };\n\n    if (showUserMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showUserMenu]);\n\n  return (\n    <div className=\"relative\">\n      {user ? (\n        <>\n          <div\n            onClick={toggleUserMenu}\n            className=\"flex items-center space-x-2 bg-gray-800 hover:bg-gray-700 rounded-lg px-3 py-2 transition-colors cursor-pointer\"\n          >\n            <img\n              src={user.picture}\n              alt={user.name}\n              className=\"w-8 h-8 rounded-full\"\n            />\n            <span className=\"text-white font-medium max-w-32 truncate\">\n              {user.name}\n            </span>\n            <svg className=\"w-4 h-4 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n\n          {showUserMenu && (\n            <div\n              ref={menuRef}\n              className=\"absolute right-0 top-full mt-2 bg-white rounded-lg shadow-lg border border-gray-200 min-w-64 z-50\"\n            >\n              <div className=\"p-4\">\n                <div className=\"flex items-center space-x-3 mb-4\">\n                  <img\n                    src={user.picture}\n                    alt={user.name}\n                    className=\"w-12 h-12 rounded-full\"\n                  />\n                  <div>\n                    <div className=\"font-medium text-gray-900\">{user.name}</div>\n                    <div className=\"text-sm text-gray-500\">{user.email}</div>\n                  </div>\n                </div>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-lg transition-colors\"\n                >\n                  Logout\n                </button>\n              </div>\n            </div>\n          )}\n        </>\n      ) : (\n        <div ref={googleButtonRef} className=\"inline-block google-btn-container\"></div>\n      )}\n      {error && (\n        <div className=\"text-red-600 mt-2\">{error}</div>\n      )}\n\n      {/* ✅ Plain React style tag for bold text */}\n      <style>\n        {`\n          .google-btn-container span {\n            font-weight: 600 !important;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default LoginButton;\n"],"names":["_ref","onLogin","onLogout","user","setUser","useState","showUserMenu","setShowUserMenu","error","setError","menuRef","useRef","googleButtonRef","initializeGoogle","window","google","accounts","id","initialize","client_id","callback","handleCredentialResponse","current","innerHTML","renderButton","theme","size","type","shape","text","console","log","err","useEffect","loadGoogleScript","script","document","createElement","src","async","defer","onload","onerror","head","appendChild","response","payload","JSON","parse","atob","credential","split","userData","name","email","picture","localStorage","setItem","stringify","savedUser","getItem","removeItem","handleClickOutside","event","contains","target","addEventListener","removeEventListener","_jsxs","className","children","_Fragment","onClick","toggleUserMenu","_jsx","alt","fill","viewBox","fillRule","d","clipRule","ref","handleLogout"],"sourceRoot":""}