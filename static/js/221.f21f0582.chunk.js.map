{"version":3,"file":"static/js/221.f21f0582.chunk.js","mappings":"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","sources":["components/Sidebar.tsx"],"sourcesContent":["import React, { memo, useCallback, useState, useEffect, useRef } from 'react';\nimport { AppData } from '../types';\n\ninterface SidebarProps {\n  data: AppData;\n  categoryOrder: string[];\n  selectedCategory: keyof AppData | null;\n  selectedTopic: string | null;\n  setSelectedCategory: React.Dispatch<React.SetStateAction<keyof AppData | null>>;\n  setSelectedTopic: React.Dispatch<React.SetStateAction<string | null>>;\n  setSelectedSubtopic: React.Dispatch<React.SetStateAction<string | null>>;\n}\n\nconst Sidebar: React.FC<SidebarProps> = memo(({\n  data,\n  categoryOrder,\n  selectedCategory,\n  selectedTopic,\n  setSelectedCategory,\n  setSelectedTopic,\n  setSelectedSubtopic\n}) => {\n  const [expandedTopics, setExpandedTopics] = useState<Record<string, boolean>>({});\n  const [selectedSubtopic, setLocalSelectedSubtopic] = useState<string | null>(null);\n  const sidebarRef = useRef<HTMLDivElement>(null);\n\n  // Prevent overscroll by handling wheel events\n  useEffect(() => {\n    const sidebarElement = sidebarRef.current;\n    if (!sidebarElement) return;\n\n    const handleWheel = (e: WheelEvent) => {\n      const { scrollTop, scrollHeight, clientHeight } = sidebarElement;\n      const isScrollingUp = e.deltaY < 0;\n      const isScrollingDown = e.deltaY > 0;\n\n      // Prevent overscroll at top\n      if (isScrollingUp && scrollTop === 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      }\n\n      // Prevent overscroll at bottom\n      if (isScrollingDown && scrollTop + clientHeight >= scrollHeight) {\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      }\n    };\n\n    sidebarElement.addEventListener('wheel', handleWheel, { passive: false });\n    return () => {\n      sidebarElement.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n\n  // Ensure topic is expanded when selected\n  useEffect(() => {\n    if (selectedTopic) {\n      setExpandedTopics(prev => ({\n        ...prev,\n        [selectedTopic]: true\n      }));\n    }\n  }, [selectedTopic]);\n\n  const handleCategoryClick = useCallback((category: keyof AppData) => {\n    // Special handling for Revision Sheet\n    if (category === \"DSA Countdown: Final 15 Days\" || category === \"ALL DSA Patterns You must know\") {\n      setSelectedCategory(category);\n      setSelectedTopic(\"problems\");\n      setSelectedSubtopic(null);\n      return;\n    }\n\n    setSelectedCategory(prevCategory => {\n      // If clicking the same category, toggle it off\n      if (prevCategory === category) {\n        setSelectedTopic(null);\n        setSelectedSubtopic(null);\n        return null;\n      }\n      // Otherwise, select the new category\n      setSelectedTopic(null);\n      setSelectedSubtopic(null);\n      return category;\n    });\n  }, [setSelectedCategory, setSelectedTopic, setSelectedSubtopic]);\n\n  const handleTopicClick = useCallback((topic: string) => {\n    setSelectedTopic(prevTopic => {\n      // If clicking the same topic, toggle it off\n      if (prevTopic === topic) {\n        setSelectedSubtopic(null);\n        return null;\n      }\n      // Otherwise, select the new topic\n      setSelectedSubtopic(null);\n      return topic;\n    });\n\n    // Always expand the topic when clicked\n    setExpandedTopics(prev => ({\n      ...prev,\n      [topic]: true\n    }));\n  }, [setSelectedTopic, setSelectedSubtopic]);\n\n  const handleSubtopicClick = useCallback((subtopic: string) => {\n    // Always set the subtopic, never toggle it off when clicking the same one\n    setSelectedSubtopic(subtopic);\n    setLocalSelectedSubtopic(subtopic);\n  }, [setSelectedSubtopic]);\n\n  // Function to safely get subtopics for a category and topic\n  const getSubtopics = (category: keyof AppData, topic: string): string[] => {\n    if (!category || !topic) return [];\n    \n    const categoryData = data[category];\n    if (!categoryData) return [];\n    \n    // Type assertion to access properties with string index\n    const topicData = (categoryData as any)[topic];\n    if (!topicData) return [];\n    \n    return Object.keys(topicData);\n  };\n\n  // Filter out the revision sheet from regular categories\n  const regularCategories = categoryOrder.filter(cat => \n    cat !== \"DSA Countdown: Final 15 Days\" && cat !== \"ALL DSA Patterns You must know\"\n  );\n\n  return (\n    <div ref={sidebarRef} className=\"w-1/4 bg-gray-900 p-4 flex flex-col sidebar-container sidebar-locked\" style={{ height: 'calc(100vh - 140px)', overscrollBehavior: 'none', position: 'relative' }} role=\"navigation\">\n      {/* Main categories section */}\n      <div className=\"flex-grow\">\n        <ul className=\"space-y-2\">\n          {regularCategories.map((category) => (\n            <li key={category} className=\"mb-4\">\n              <button\n                className={`w-full text-left p-2 rounded-md ${\n                  selectedCategory === category ? 'bg-blue-700' : 'hover:bg-gray-800'\n                }`}\n                onClick={() => handleCategoryClick(category as keyof AppData)}\n                aria-expanded={selectedCategory === category}\n                aria-controls={`${category}-topics`}\n              >\n                <span className=\"font-bold\">{category}</span>\n                <span className=\"float-right\">{selectedCategory === category ? '▼' : '▶'}</span>\n              </button>\n              \n              {selectedCategory === category && (\n                <ul id={`${category}-topics`} className=\"ml-4 mt-2 space-y-1\">\n                  {Object.keys((data[category as keyof AppData] as any)).map((topic) => (\n                    <li key={topic}>\n                      <button\n                        className={`w-full text-left p-2 rounded-md ${\n                          selectedTopic === topic ? 'bg-blue-600' : 'hover:bg-gray-800'\n                        }`}\n                        onClick={() => handleTopicClick(topic)}\n                        aria-expanded={selectedTopic === topic && expandedTopics[topic]}\n                        aria-controls={`${topic}-subtopics`}\n                      >\n                        {topic}\n                        <span className=\"float-right\">{selectedTopic === topic && expandedTopics[topic] ? '▼' : '▶'}</span>\n                      </button>\n                      \n                      {selectedTopic === topic && expandedTopics[topic] && (\n                        <ul id={`${topic}-subtopics`} className=\"ml-4 mt-1 space-y-1\">\n                          {getSubtopics(selectedCategory, topic).map((subtopic) => (\n                            <li key={subtopic}>\n                              <button\n                                className={`w-full text-left p-2 rounded-md ${\n                                  selectedSubtopic === subtopic ? 'bg-blue-500' : 'hover:bg-gray-800'\n                                }`}\n                                onClick={() => handleSubtopicClick(subtopic)}\n                              >\n                                <em>{subtopic}</em>\n                              </button>\n                            </li>\n                          ))}\n                        </ul>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n      \n      {/* Footer section with revision sheet */}\n      <div className=\"mt-auto pt-4 border-t border-gray-700\">\n        <button\n          className={`w-full text-left p-2 rounded-md mb-2 ${\n            selectedCategory === \"DSA Countdown: Final 15 Days\" ? 'bg-blue-700' : 'hover:bg-gray-800'\n          }`}\n          onClick={() => handleCategoryClick(\"DSA Countdown: Final 15 Days\" as keyof AppData)}\n        >\n          <span className=\"font-bold text-yellow-400\">DSA Countdown: Final 15 Days</span>\n          <span className=\"float-right\">▶</span>\n        </button>\n        \n        <button\n          className={`w-full text-left p-2 rounded-md ${\n            selectedCategory === \"ALL DSA Patterns You must know\" ? 'bg-blue-700' : 'hover:bg-gray-800'\n          }`}\n          onClick={() => handleCategoryClick(\"ALL DSA Patterns You must know\" as keyof AppData)}\n        >\n          <span className=\"font-bold text-green-400\">ALL DSA Patterns You must know</span>\n          <span className=\"float-right\">▶</span>\n        </button>\n      </div>\n    </div>\n  );\n});\n\nSidebar.displayName = 'Sidebar';\n\nexport default Sidebar;\n"],"names":["Sidebar","memo","_ref","data","categoryOrder","selectedCategory","selectedTopic","setSelectedCategory","setSelectedTopic","setSelectedSubtopic","expandedTopics","setExpandedTopics","useState","selectedSubtopic","setLocalSelectedSubtopic","sidebarRef","useRef","useEffect","sidebarElement","current","handleWheel","e","scrollTop","scrollHeight","clientHeight","isScrollingUp","deltaY","isScrollingDown","preventDefault","stopPropagation","addEventListener","passive","removeEventListener","prev","_objectSpread","handleCategoryClick","useCallback","category","prevCategory","handleTopicClick","topic","prevTopic","handleSubtopicClick","subtopic","getSubtopics","categoryData","topicData","Object","keys","regularCategories","filter","cat","_jsxs","ref","className","style","height","overscrollBehavior","position","role","children","_jsx","map","concat","onClick","id","displayName"],"sourceRoot":""}