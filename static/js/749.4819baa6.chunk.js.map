{"version":3,"file":"static/js/749.4819baa6.chunk.js","mappings":"wKAIA,MAAMA,GAAYC,EAAAA,EAAAA,OAAK,IAAM,6BACvBC,GAAUD,EAAAA,EAAAA,OAAK,IAAM,+BAYrBE,GAA0CC,EAAAA,EAAAA,OAAKC,IAQ9C,IAR+C,iBACpDC,EAAgB,cAChBC,EAAa,iBACbC,EAAgB,KAChBC,EAAI,WACJC,EAAU,cACVC,EAAa,oBACbC,GACDP,GAECQ,EAAAA,EAAAA,YAAU,KAERC,QAAQC,IAAI,8BAA+B,CACzCT,mBACAC,gBACAC,mBACAQ,gBAAiBC,IACjBC,SAAUT,EAAOU,OAAOC,KAAKX,GAAQ,cAEtC,CAACH,EAAkBC,EAAeC,IAGrC,MAAMS,EAAsBA,MACrBX,IAGoB,iCAArBA,GAA4E,mCAArBA,KAItDC,KAGoB,QAArBD,IAA+BE,IAMrC,OACEa,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA4CC,KAAK,OAAOC,MAAO,CAAEC,UAAW,sBAAuBC,mBAAoB,WAAYC,UAChJN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKK,UAClBC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBK,SAAC,uBAAyBA,SAAA,EAC5EV,MACAI,EAAAA,EAAAA,KAACnB,EAAO,CACN6B,SAAUzB,EACV0B,MAAOzB,EACPK,oBAAqBA,IAIxBK,KAAyBX,IACxBsB,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAN,SAAA,EACEN,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCK,SAC1B,iCAArBrB,EACGA,EAAgB,GAAA4B,OACb5B,EAAgB,OAAA4B,OAAM3B,EAAa,KAAA2B,OAAI1B,EAAgB,KAAA0B,OAAQ1B,GAAqB,OAE7Fa,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CAACL,UAAUT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcK,SAAC,oEAAsEA,UAC3HN,EAAAA,EAAAA,KAACrB,EAAS,CACRM,iBAAkBA,EAClBC,cACEA,IACsB,iCAArBD,EAAsD,uBACjC,mCAArBA,EAAwD,yBACxD,YAEHE,iBAAkBA,GAAoB,GACtCC,KAAMA,EACNC,WAAYA,EACZC,cAAeA,mBAW/BR,EAAYiC,YAAc,cAE1B,S","sources":["components/ContentArea.tsx"],"sourcesContent":["import React, { Suspense, lazy, memo, useEffect } from 'react';\nimport { DoneStatusType } from '../types';\nimport ErrorBoundary from './ErrorBoundary';\n\nconst DataTable = lazy(() => import('./DataTable'));\nconst Welcome = lazy(() => import('./Welcome'));\n\ninterface ContentAreaProps {\n  selectedCategory: string | null;\n  selectedTopic: string | null;\n  selectedSubtopic: string | null;\n  data: any;\n  doneStatus: DoneStatusType;\n  setDoneStatus: React.Dispatch<React.SetStateAction<DoneStatusType>>;\n  setSelectedCategory: React.Dispatch<React.SetStateAction<string | null>>;\n}\n\nconst ContentArea: React.FC<ContentAreaProps> = memo(({\n  selectedCategory,\n  selectedTopic,\n  selectedSubtopic,\n  data,\n  doneStatus,\n  setDoneStatus,\n  setSelectedCategory\n}) => {\n  // Debug logging\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('ContentArea rendering with:', { \n      selectedCategory, \n      selectedTopic, \n      selectedSubtopic,\n      shouldShowTable: shouldShowDataTable(),\n      dataKeys: data ? Object.keys(data) : 'no data'\n    });\n  }, [selectedCategory, selectedTopic, selectedSubtopic]);\n\n  // Determine if we should show the data table\n  const shouldShowDataTable = () => {\n    if (!selectedCategory) return false;\n    \n    // Special case for Revision Sheet - show data table when category is selected (topic will be auto-set)\n    if (selectedCategory === 'DSA Countdown: Final 15 Days' || selectedCategory === 'ALL DSA Patterns You must know') {\n      return true;\n    }\n    \n    if (!selectedTopic) return false;\n    \n    // For DSA, we need a subtopic\n    if (selectedCategory === 'DSA' && !selectedSubtopic) return false;\n    \n    // For other categories, we just need a topic\n    return true;\n  };\n\n  return (\n    <div className=\"flex-1 overflow-y-auto scrollable-content\" role=\"main\" style={{ maxHeight: 'calc(100vh - 140px)', overscrollBehavior: 'contain' }}>\n      <div className=\"p-6\">\n        <Suspense fallback={<div className=\"text-center p-4\">Loading content...</div>}>\n        {!shouldShowDataTable() && (\n          <Welcome \n            category={selectedCategory} \n            topic={selectedTopic} \n            setSelectedCategory={setSelectedCategory} \n          />\n        )}\n        \n        {shouldShowDataTable() && selectedCategory && (\n          <>\n            <h1 className=\"text-2xl font-bold text-white mb-4\">\n              {selectedCategory === 'DSA Countdown: Final 15 Days' \n                ? selectedCategory \n                : `${selectedCategory} / ${selectedTopic} ${selectedSubtopic ? `/ ${selectedSubtopic}` : ''}`}\n            </h1>\n            <ErrorBoundary fallback={<div className=\"text-red-500\">Error loading data table. Please check the console for details.</div>}>\n              <DataTable\n                selectedCategory={selectedCategory}\n                selectedTopic={\n                  selectedTopic || \n                  (selectedCategory === \"DSA Countdown: Final 15 Days\" ? \"Must Do DSA Problems\" : \n                   selectedCategory === \"ALL DSA Patterns You must know\" ? \"Must Know DSA Patterns\" : \n                   \"problems\")\n                }\n                selectedSubtopic={selectedSubtopic || ''}\n                data={data}\n                doneStatus={doneStatus}\n                setDoneStatus={setDoneStatus}\n              />\n            </ErrorBoundary>\n          </>\n        )}\n      </Suspense>\n      </div>\n    </div>\n  );\n});\n\nContentArea.displayName = 'ContentArea';\n\nexport default ContentArea;\n"],"names":["DataTable","lazy","Welcome","ContentArea","memo","_ref","selectedCategory","selectedTopic","selectedSubtopic","data","doneStatus","setDoneStatus","setSelectedCategory","useEffect","console","log","shouldShowTable","shouldShowDataTable","dataKeys","Object","keys","_jsx","className","role","style","maxHeight","overscrollBehavior","children","_jsxs","Suspense","fallback","category","topic","_Fragment","concat","ErrorBoundary","displayName"],"sourceRoot":""}